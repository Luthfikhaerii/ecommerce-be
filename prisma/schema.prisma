// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String
  role     String
  email    String  @unique
  password String
  orders   Order[]
}

model Category {
  id       Int    @id @default(autoincrement())
  category String
}

model Product {
  createdAt            DateTime @default(now())
  id                   Int      @id @default(autoincrement())
  status               String
  name_product         String
  price                Int
  stock                Int
  sizes                String[]
  image                String
  content              String[]
  product_description  String
  delivery_description String

  item_orders Item_Order[]
}

model Order {
  createdAt      DateTime     @default(now())
  id             Int          @id @default(autoincrement())
  status         String
  id_user        Int?
  username       String
  address        String
  pos_code       Int
  total_price    Int
  total_quantity Int
  shipping_cost  Int
  item_orders    Item_Order[]

  user User? @relation(fields: [id_user], references: [id], onDelete: SetNull)
}

model Item_Order {
  id           Int    @id @default(autoincrement())
  id_product   Int?
  id_order     Int
  product_name String
  price        Int
  quantity     Int
  size         String

  product Product? @relation(fields: [id_product], references: [id], onDelete: SetNull)
  order   Order    @relation(fields: [id_order], references: [id], onDelete: Cascade)
}
